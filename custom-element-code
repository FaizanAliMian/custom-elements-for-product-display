class ProductDisplay extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        console.log("Custom element connected to the page.");
        const productsData = this.getAttribute("data-products");
        if (productsData) {
            const products = JSON.parse(productsData);
            this.appendChild(this.init(products));
        } else {
            console.warn("No data-products attribute found.");
        }
        // Add custom styles inside the shadow DOM
        // this.addStyles();
    }

    // Method to append styles to shadow DOM
    addStyles() {
        const style = document.createElement("style");
        style.textContent = `
            .custom-tooltip-theme {
                background-color: #333 !important;
                color: #fff !important;
                font-size: 14px;
                padding: 10px;
                border-radius: 4px;
            }
        `;
        this.shadowRoot.appendChild(style); // Add the style element to shadow DOM
    }

    init(products) {
        if (typeof tippy !== 'function') {
            console.error("Tippy.js is not defined. Ensure scripts are loaded correctly.");
            return;
        }
        const container = document.createElement("div");
        container.id = "container";
        container.style.display = "flex";
        container.style.flexWrap = "wrap";
        container.style.marginTop = "40px";
        // container.style.marginLeft = "50px";
        container.style.gap = "20px";
        container.style.justifyContent = "left";
        container.style.position = "relative";

        const descriptionBox = document.createElement("div");
        descriptionBox.id = "descriptionBox";
        descriptionBox.style.marginTop = "20px";
        descriptionBox.style.fontSize = "16px";
        // descriptionBox.style.fontWeight = "bold";

        products.forEach(product => {
            const boxWrapper = document.createElement("div");
            const box = document.createElement("div");
            box.className = "box";
            box.style.position = "relative";
            box.style.width = "80px";
            box.style.height = "80px";
            box.style.border = "3px solid transparent";
            box.style.display = "flex";
            box.style.alignItems = "center";
            box.style.justifyContent = "center";
            box.style.cursor = "pointer";
            box.style.borderRadius = "50%";
            box.style.boxSizing = "border-box";
            box.style.transition = "transform 0.3s ease, border 0.3s ease";
            box.innerHTML = `<img src="${product.image}" alt="${product.name}" style="width: 100%; height: 100%; border-radius: 50%; object-fit: cover;">`;

            box.addEventListener("mouseenter", () => {
                box.style.transform = "scale(1.1)";
            });

            box.addEventListener("mouseleave", () => {
                box.style.transform = "scale(1)";
            });

            const scentName = document.createElement("p");
            scentName.textContent = product.name;
            scentName.style.marginTop = "10px";
            scentName.style.fontSize = "14px";
            scentName.style.textAlign = "center";
            scentName.style.fontWeight = "bold";

            // Initialize tooltip with tippy.js
            tippy(box, {
                content: product.description, // Content for the tooltip
                trigger: 'mouseenter focus', // When the tooltip is triggered
                placement: 'top', // Position of the tooltip (top, bottom, etc.)
                theme: 'custom-tooltip-theme', // Tooltip theme: light
                animation: 'fade', // Tooltip animation
                arrow: true // Show arrow on tooltip
            });

            // Handle selection
            box.addEventListener("click", () => {

                container.querySelectorAll(".box").forEach(el => el.style.border = "3px solid transparent");
                box.style.border = "3px solid #007BFF";
                descriptionBox.innerHTML = `<b>Description:</b> ${product.description}`;

                this.dispatchEvent(new CustomEvent("productClick", {
                    detail: product
                }));
            });
            // append elements to display
            boxWrapper.appendChild(box);
            boxWrapper.appendChild(scentName);
            container.appendChild(boxWrapper);
        });

        // for description and hover effects
        container.appendChild(descriptionBox);

        return container;
    }
}

customElements.define("display-product", ProductDisplay);
